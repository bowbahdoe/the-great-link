name: "The Great Link"
'on':
  workflow_dispatch:
  schedule:
    - cron: 7 2 * * *
jobs:
  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'adopt'
      - uses: extractions/setup-just@v2
      - name: Generate Linked Image
        run: just generate
      - uses: actions/upload-artifact@v4
        with:
          name:
            macimg
          path:
            target/generate
          overwrite:
            true
  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'adopt'
      - uses: extractions/setup-just@v2
      - name: Generate Linked Image
        run: just generate
      - uses: actions/upload-artifact@v4
        with:
          name:
            ubuntuimg
          path:
            target/generate
          overwrite:
            true
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'adopt'
      - uses: extractions/setup-just@v2
      - name: Get all Dependencies
        run:
          ./mvnw.cmd dependency:copy-dependencies
      - name: Generate List of Module Names
        run:
          java -p target/dependency --add-modules ALL-MODULE-PATH scripts/GetModules.java modnames.txt
      - name: Generate Linked Image
        run:
          jlink --output target/generate --module-path target/dependency --add-modules "@modnames.txt" --bind-services --launcher update4j=org.update4j/org.update4j.Bootstrap
      - uses: actions/upload-artifact@v4
        with:
          name:
            windowsimg
          path:
            target/generate
          overwrite:
            true
  make_release:
    runs-on: ubuntu-latest
    needs: [ build_macos, build_ubuntu, build_windows ]
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: macimg
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: ubuntuimg
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: windowsimg
      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Echo current date
        run: echo $NOW
      - name: List Files
        run:
          tree
      - name: "üè∑Ô∏è Push tag"
        uses: EndBug/latest-tag@latest
        with:
          ref: ${{ vars.NOW }}
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ vars.NOW }}
          tag_name: ${{ vars.NOW }}
          files:
            windowsimg/windowsimg.zip